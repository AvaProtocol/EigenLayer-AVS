name: Run Tests and Lint on PR or on-demand

on:
  pull_request:
    # Only run tests when PR to staging of main and these files are changed
    branches:
      - main
      - staging
    paths:
      - "core/**"
      - "pkg/**"
      - "aggregator/**"
      - "operator/**"
      - "model/**"
      - "cmd/**"
      - "version/**"
      - "config/**"
      - "go.mod"
      - "go.sum"
      - "!scripts/**"
      - "!**.md"
      - "!.github/**"
      - "!docs/**"
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to run tests against"
        required: true
        type: string
      force_run:
        description: "Force run tests even if only scripts changed"
        required: false
        type: boolean
        default: false

jobs:
  check-changes:
    name: Check Changed Files
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # Fetch all history for comparing changes
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Check if relevant files changed
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.force_run }}" = "true" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Get the base branch for comparison
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_BRANCH="${{ github.base_ref }}"
          else
            BASE_BRANCH="main"  # Default to main for manual runs
          fi

          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only origin/$BASE_BRANCH...HEAD)

          # Check if any changes are in relevant directories
          RELEVANT_CHANGES=$(echo "$CHANGED_FILES" | grep -E '\.go$|go\.mod|go\.sum|^core/|^pkg/|^aggregator/|^operator/|^model/|^cmd/|^version/|^config/')

          if [ -n "$RELEVANT_CHANGES" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "No relevant changes found. Skipping tests."
          fi

  lint:
    name: Lint
    needs: check-changes
    if: needs.check-changes.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Generate config/aggregator.yaml for tests (per-job workspace)
        env:
          # Consolidated CI variables
          SEPOLIA_RPC: "${{ vars.SEPOLIA_RPC }}"
          SEPOLIA_WS: "${{ vars.SEPOLIA_WS }}"
          SEPOLIA_BUNDLER_RPC: "${{ vars.SEPOLIA_BUNDLER_RPC }}"
          BASE_SEPOLIA_RPC: "${{ vars.BASE_SEPOLIA_RPC }}"
          BASE_SEPOLIA_BUNDLER_RPC: "${{ vars.BASE_SEPOLIA_BUNDLER_RPC }}"

          # Tenderly HTTP API credentials
          TENDERLY_ACCOUNT: "${{ vars.TENDERLY_ACCOUNT }}"
          TENDERLY_PROJECT: "${{ vars.TENDERLY_PROJECT }}"

          # Secrets
          CONTROLLER_PRIVATE_KEY: "${{ secrets.CONTROLLER_PRIVATE_KEY }}"
          TENDERLY_ACCESS_KEY: "${{ secrets.TENDERLY_ACCESS_KEY }}"
        run: |
          mkdir -p config
          cat > config/aggregator.yaml <<YAML
          # Auto-generated for CI unit tests
          environment: development
          # Global RPCs used by components that read top-level fields
          eth_http_rpc_url: "${SEPOLIA_RPC}"
          eth_ws_rpc_url: "${SEPOLIA_WS}"
          smart_wallet:
            eth_rpc_url: "${SEPOLIA_RPC}"
            eth_ws_url: "${SEPOLIA_WS}"
            bundler_url: "${SEPOLIA_BUNDLER_RPC}"
            # Use known defaults; tests that need specific addresses can override via config accessors
            factory_address: "0xB99BC2E399e06CddCF5E725c0ea341E8f0322834"
            entrypoint_address: "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"
            paymaster_address: "0x0000000000000000000000000000000000000000"
          # Tenderly HTTP Simulation API
          tenderly_account: "${TENDERLY_ACCOUNT}"
          tenderly_project: "${TENDERLY_PROJECT}"
          tenderly_access_key: "${TENDERLY_ACCESS_KEY}"
          # Test private key (only used in tests)
          test_private_key: "${CONTROLLER_PRIVATE_KEY}"
          YAML

      - name: Verify aggregator.yaml exists (per-job workspace)
        run: |
          echo "pwd=$(pwd)"
          ls -la || true
          ls -la config || true
          if [ -f config/aggregator.yaml ]; then
            sed -n '1,40p' config/aggregator.yaml | sed -e 's/tenderly_access_key:.*/tenderly_access_key: ***REDACTED***/' -e 's/test_private_key:.*/test_private_key: ***REDACTED***/' -e 's/bundler_url:.*/bundler_url: ***REDACTED***/'
          fi
          test -s config/aggregator.yaml || (echo "config/aggregator.yaml missing"; exit 1)

      - name: Generate config/aggregator.yaml for tests (per-job workspace)
        env:
          # Consolidated CI variables
          SEPOLIA_RPC: "${{ vars.SEPOLIA_RPC }}"
          SEPOLIA_WS: "${{ vars.SEPOLIA_WS }}"
          SEPOLIA_BUNDLER_RPC: "${{ vars.SEPOLIA_BUNDLER_RPC }}"
          BASE_SEPOLIA_RPC: "${{ vars.BASE_SEPOLIA_RPC }}"
          BASE_SEPOLIA_BUNDLER_RPC: "${{ vars.BASE_SEPOLIA_BUNDLER_RPC }}"

          # Tenderly HTTP API credentials
          TENDERLY_ACCOUNT: "${{ vars.TENDERLY_ACCOUNT }}"
          TENDERLY_PROJECT: "${{ vars.TENDERLY_PROJECT }}"

          # Secrets
          CONTROLLER_PRIVATE_KEY: "${{ secrets.CONTROLLER_PRIVATE_KEY }}"
          TENDERLY_ACCESS_KEY: "${{ secrets.TENDERLY_ACCESS_KEY }}"
        run: |
          mkdir -p config
          cat > config/aggregator.yaml <<YAML
          # Auto-generated for CI unit tests
          environment: development

          # Global RPCs used by components that read top-level fields
          eth_http_rpc_url: "${SEPOLIA_RPC}"
          eth_ws_rpc_url: "${SEPOLIA_WS}"

          smart_wallet:
            eth_rpc_url: "${SEPOLIA_RPC}"
            eth_ws_url: "${SEPOLIA_WS}"
            bundler_url: "${SEPOLIA_BUNDLER_RPC}"
            # Use known defaults; tests that need specific addresses can override via config accessors
            factory_address: "0xB99BC2E399e06CddCF5E725c0ea341E8f0322834"
            entrypoint_address: "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"
            paymaster_address: "0x0000000000000000000000000000000000000000"

          # Tenderly HTTP Simulation API
          tenderly_account: "${TENDERLY_ACCOUNT}"
          tenderly_project: "${TENDERLY_PROJECT}"
          tenderly_access_key: "${TENDERLY_ACCESS_KEY}"

          # Test private key (only used in tests)
          test_private_key: "${CONTROLLER_PRIVATE_KEY}"
          YAML

      - name: Verify aggregator.yaml exists (per-job workspace)
        run: |
          echo "pwd=$(pwd)"
          ls -la || true
          ls -la config || true
          if [ -f config/aggregator.yaml ]; then
            sed -n '1,40p' config/aggregator.yaml | sed -e 's/tenderly_access_key:.*/tenderly_access_key: ***REDACTED***/' -e 's/test_private_key:.*/test_private_key: ***REDACTED***/' -e 's/bundler_url:.*/bundler_url: ***REDACTED***/'
          fi
          test -s config/aggregator.yaml || (echo "config/aggregator.yaml missing"; exit 1)

      - name: Generate config/aggregator.yaml for tests (per-job workspace)
        env:
          # Consolidated CI variables
          SEPOLIA_RPC: "${{ vars.SEPOLIA_RPC }}"
          SEPOLIA_WS: "${{ vars.SEPOLIA_WS }}"
          SEPOLIA_BUNDLER_RPC: "${{ vars.SEPOLIA_BUNDLER_RPC }}"
          BASE_SEPOLIA_RPC: "${{ vars.BASE_SEPOLIA_RPC }}"
          BASE_SEPOLIA_BUNDLER_RPC: "${{ vars.BASE_SEPOLIA_BUNDLER_RPC }}"

          # Tenderly HTTP API credentials
          TENDERLY_ACCOUNT: "${{ vars.TENDERLY_ACCOUNT }}"
          TENDERLY_PROJECT: "${{ vars.TENDERLY_PROJECT }}"

          # Secrets
          CONTROLLER_PRIVATE_KEY: "${{ secrets.CONTROLLER_PRIVATE_KEY }}"
          TENDERLY_ACCESS_KEY: "${{ secrets.TENDERLY_ACCESS_KEY }}"
        run: |
          mkdir -p config
          cat > config/aggregator.yaml <<YAML
          # Auto-generated for CI unit tests
          environment: development

          # Global RPCs used by components that read top-level fields
          eth_http_rpc_url: "${SEPOLIA_RPC}"
          eth_ws_rpc_url: "${SEPOLIA_WS}"

          smart_wallet:
            eth_rpc_url: "${SEPOLIA_RPC}"
            eth_ws_url: "${SEPOLIA_WS}"
            bundler_url: "${SEPOLIA_BUNDLER_RPC}"
            # Use known defaults; tests that need specific addresses can override via config accessors
            factory_address: "0xB99BC2E399e06CddCF5E725c0ea341E8f0322834"
            entrypoint_address: "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"
            paymaster_address: "0x0000000000000000000000000000000000000000"

          # Tenderly HTTP Simulation API
          tenderly_account: "${TENDERLY_ACCOUNT}"
          tenderly_project: "${TENDERLY_PROJECT}"
          tenderly_access_key: "${TENDERLY_ACCESS_KEY}"

          # Test private key (only used in tests)
          test_private_key: "${CONTROLLER_PRIVATE_KEY}"
          YAML

      - name: Verify aggregator.yaml exists (per-job workspace)
        run: |
          echo "pwd=$(pwd)"
          ls -la || true
          ls -la config || true
          if [ -f config/aggregator.yaml ]; then
            sed -n '1,40p' config/aggregator.yaml | sed -e 's/tenderly_access_key:.*/tenderly_access_key: ***REDACTED***/' -e 's/test_private_key:.*/test_private_key: ***REDACTED***/' -e 's/bundler_url:.*/bundler_url: ***REDACTED***/'
          fi
          test -s config/aggregator.yaml || (echo "config/aggregator.yaml missing"; exit 1)

      - name: Generate config/aggregator.yaml for tests
        env:
          # Consolidated CI variables
          SEPOLIA_RPC: "${{ vars.SEPOLIA_RPC }}"
          SEPOLIA_WS: "${{ vars.SEPOLIA_WS }}"
          SEPOLIA_BUNDLER_RPC: "${{ vars.SEPOLIA_BUNDLER_RPC }}"
          BASE_SEPOLIA_RPC: "${{ vars.BASE_SEPOLIA_RPC }}"
          BASE_SEPOLIA_BUNDLER_RPC: "${{ vars.BASE_SEPOLIA_BUNDLER_RPC }}"

          # Tenderly HTTP API credentials
          TENDERLY_ACCOUNT: "${{ vars.TENDERLY_ACCOUNT }}"
          TENDERLY_PROJECT: "${{ vars.TENDERLY_PROJECT }}"

          # Secrets
          CONTROLLER_PRIVATE_KEY: "${{ secrets.CONTROLLER_PRIVATE_KEY }}"
          TENDERLY_ACCESS_KEY: "${{ secrets.TENDERLY_ACCESS_KEY }}"
        run: |
          mkdir -p config
          cat > config/aggregator.yaml <<YAML
          # Auto-generated for CI unit tests
          environment: development

          # Global RPCs used by components that read top-level fields
          eth_http_rpc_url: "${SEPOLIA_RPC}"
          eth_ws_rpc_url: "${SEPOLIA_WS}"

          smart_wallet:
            eth_rpc_url: "${SEPOLIA_RPC}"
            eth_ws_url: "${SEPOLIA_WS}"
            bundler_url: "${SEPOLIA_BUNDLER_RPC}"
            # Use known defaults; tests that need specific addresses can override via config accessors
            factory_address: "0xB99BC2E399e06CddCF5E725c0ea341E8f0322834"
            entrypoint_address: "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"
            paymaster_address: "0x0000000000000000000000000000000000000000"

          # Tenderly HTTP Simulation API
          tenderly_account: "${TENDERLY_ACCOUNT}"
          tenderly_project: "${TENDERLY_PROJECT}"
          tenderly_access_key: "${TENDERLY_ACCESS_KEY}"

          # Test private key (only used in tests)
          test_private_key: "${CONTROLLER_PRIVATE_KEY}"
          YAML
          echo "Generated config/aggregator.yaml:"
          sed -e 's/\(access_key: \).*/\1***REDACTED***/' -e 's/\(test_private_key: \).*/\1***REDACTED***/' config/aggregator.yaml | sed -e 's/\(bundler_url: \).*/\1***REDACTED***/'

      - name: Verify aggregator.yaml exists
        run: |
          echo "pwd=$(pwd)"
          ls -la || true
          ls -la config || true
          echo "First 40 lines of config/aggregator.yaml (redacted):"
          if [ -f config/aggregator.yaml ]; then
            sed -n '1,40p' config/aggregator.yaml | sed -e 's/tenderly_access_key:.*/tenderly_access_key: ***REDACTED***/' -e 's/test_private_key:.*/test_private_key: ***REDACTED***/' -e 's/bundler_url:.*/bundler_url: ***REDACTED***/'
          fi
          test -s config/aggregator.yaml || (echo "config/aggregator.yaml missing"; exit 1)

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Cache golangci-lint binary
        uses: actions/cache@v3
        with:
          path: $(go env GOPATH)/bin/golangci-lint
          key: golangci-lint-v1.55.2

      # - name: Install golangci-lint
      #   run: |
      #     if [ ! -f "$(go env GOPATH)/bin/golangci-lint" ]; then
      #       curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
      #     fi

      # - name: Run golangci-lint
      #   run: $(go env GOPATH)/bin/golangci-lint run ./...

  test:
    environment: Test
    name: Unit Test
    needs: check-changes
    if: needs.check-changes.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - aggregator
          - core/taskengine
          - core/taskengine/trigger
          - core/taskengine/macros
          - pkg/timekeeper
          - pkg/graphql
          - pkg/byte4
          - pkg/erc4337/preset
          - core/backup
          - core/migrator
          - migrations
          - operator

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Generate config/aggregator.yaml for tests (per-job workspace)
        env:
          # Consolidated CI variables
          SEPOLIA_RPC: "${{ vars.SEPOLIA_RPC }}"
          SEPOLIA_WS: "${{ vars.SEPOLIA_WS }}"
          SEPOLIA_BUNDLER_RPC: "${{ vars.SEPOLIA_BUNDLER_RPC }}"
          BASE_SEPOLIA_RPC: "${{ vars.BASE_SEPOLIA_RPC }}"
          BASE_SEPOLIA_BUNDLER_RPC: "${{ vars.BASE_SEPOLIA_BUNDLER_RPC }}"

          # Tenderly HTTP API credentials
          TENDERLY_ACCOUNT: "${{ vars.TENDERLY_ACCOUNT }}"
          TENDERLY_PROJECT: "${{ vars.TENDERLY_PROJECT }}"

          # Secrets
          CONTROLLER_PRIVATE_KEY: "${{ secrets.CONTROLLER_PRIVATE_KEY }}"
          TENDERLY_ACCESS_KEY: "${{ secrets.TENDERLY_ACCESS_KEY }}"
        run: |
          mkdir -p config
          cat > config/aggregator.yaml <<YAML
          # Auto-generated for CI unit tests
          environment: development

          # Global RPCs used by components that read top-level fields
          eth_http_rpc_url: "${SEPOLIA_RPC}"
          eth_ws_rpc_url: "${SEPOLIA_WS}"

          smart_wallet:
            eth_rpc_url: "${SEPOLIA_RPC}"
            eth_ws_url: "${SEPOLIA_WS}"
            bundler_url: "${SEPOLIA_BUNDLER_RPC}"
            # Use known defaults; tests that need specific addresses can override via config accessors
            factory_address: "0xB99BC2E399e06CddCF5E725c0ea341E8f0322834"
            entrypoint_address: "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789"
            paymaster_address: "0x0000000000000000000000000000000000000000"

          # Tenderly HTTP Simulation API
          tenderly_account: "${TENDERLY_ACCOUNT}"
          tenderly_project: "${TENDERLY_PROJECT}"
          tenderly_access_key: "${TENDERLY_ACCESS_KEY}"

          # Test private key (only used in tests)
          test_private_key: "${CONTROLLER_PRIVATE_KEY}"
          YAML

      - name: Verify aggregator.yaml exists (per-job workspace)
        run: |
          echo "pwd=$(pwd)"
          ls -la || true
          ls -la config || true
          echo "Generated config/aggregator.yaml (redacted first 40 lines):"
          if [ -f config/aggregator.yaml ]; then
            sed -n '1,40p' config/aggregator.yaml | sed -e 's/tenderly_access_key:.*/tenderly_access_key: ***REDACTED***/' -e 's/test_private_key:.*/test_private_key: ***REDACTED***/' -e 's/bundler_url:.*/bundler_url: ***REDACTED***/'
          fi
          test -s config/aggregator.yaml || (echo "config/aggregator.yaml missing"; exit 1)

      - name: Run Go test
        env:
          # Consolidated CI variables
          SEPOLIA_RPC: "${{ vars.SEPOLIA_RPC }}"
          SEPOLIA_WS: "${{ vars.SEPOLIA_WS }}"
          SEPOLIA_BUNDLER_RPC: "${{ vars.SEPOLIA_BUNDLER_RPC }}"
          BASE_SEPOLIA_RPC: "${{ vars.BASE_SEPOLIA_RPC }}"
          BASE_SEPOLIA_BUNDLER_RPC: "${{ vars.BASE_SEPOLIA_BUNDLER_RPC }}"

          # Tenderly HTTP API credentials
          TENDERLY_ACCOUNT: "${{ vars.TENDERLY_ACCOUNT }}"
          TENDERLY_PROJECT: "${{ vars.TENDERLY_PROJECT }}"

          # Secrets
          CONTROLLER_PRIVATE_KEY: "${{ secrets.CONTROLLER_PRIVATE_KEY }}"
          TENDERLY_ACCESS_KEY: "${{ secrets.TENDERLY_ACCESS_KEY }}"

        run: |
          cd ./${{ matrix.test }}
          go test . -v
