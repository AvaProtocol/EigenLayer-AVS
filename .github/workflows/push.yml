name: Run on Push

on:
  push:
  workflow_dispatch:

jobs:
  test:
    environment: Test
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - ./core/taskengine
          - ./core/taskengine/trigger
          - ./core/taskengine/macros
          - ./pkg/timekeeper
          - ./pkg/graphql
          - ./pkg/erc4337/preset
          - ./aggregator/

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Run Go test
        env:
          RPC_URL: "${{ secrets.RPC_URL }}"
          BUNDLER_RPC: "${{ secrets.BUNDLER_RPC }}"
          FACTORY_ADDRESS: "${{ vars.FACTORY_ADDRESS }}"
          BASE_SEPOLIA_RPC_URL: "${{ secrets.BASE_SEPOLIA_RPC_URL }}"
          BASE_SEPOLIA_BUNDLER_RPC: "${{ secrets.BASE_SEPOLIA_BUNDLER_RPC }}"
          CONTROLLER_PRIVATE_KEY: "${{ secrets.CONTROLLER_PRIVATE_KEY }}"

        run: |
          cd ${{ matrix.test }}
          go test . -v

  publish-dev-build:
    name: Publish dev build docker image to dockerhub
    runs-on: 'ubuntu-latest'
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # This is a dedicated repository to house the development/preview build
          images: |
            avaprotocol/avs-dev
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value={{sha}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push avs-dev docker image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            RELEASE_TAG=${{ inputs.tag || github.sha ||  github.head_ref || github.ref_name }}
          platforms: linux/amd64,linux/arm64
          context: .
          file: dockerfiles/operator.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
