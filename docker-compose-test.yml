name: bundler-unitest
services:
  bundler:
    image: ghcr.io/candidelabs/voltaire/voltaire-bundler:latest
    command:
      - "--bundler_secret"
      # For unit test, we use private key of wallet 0xE164dd09e720640F6695cB6cED0308065ceFECd9
      - "$BUNDLER_PRIVATE_KEY"
      - "--rpc_url"
      - "0.0.0.0"
      - "--rpc_port"
      - "4437"
      - "--ethereum_node_url"
      - "$ETH_RPC_URL"
      - "--chain_id"
      - "84532"
      - "--verbose"
      - "--unsafe"
      - "--disable_p2p"
    environment:
      - BUNDLER_PRIVATE_KEY
      # For unit test, we run against base sepolia because it's way more faster and cost less than even sepolia so we don't need to use a lot of test token.
      - ETH_RPC_URL="${BASE_SEPOLIA_RPC_URL}"
    ports:
    - "3437:4437"
    restart: always
    networks:
      - bundler-unitest

  aggregator-test:
    image: avaprotocol/avs
    command: ["aggregator"]
    build:
      context: .
      dockerfile: dockerfiles/aggregator.Dockerfile
    ports:
      - "2207:2206"  # Use different port to avoid conflicts
      - "1324:1323"  # Use different port to avoid conflicts
    networks:
      - bundler-unitest
    environment:
      # Test environment configuration (required)
      - ETH_RPC_URL=${BASE_SEPOLIA_RPC_URL}
      - ETH_WS_URL=${BASE_SEPOLIA_WS_URL}
      
      # Test private keys and secrets
      - ECDSA_PRIVATE_KEY=${TEST_ECDSA_PRIVATE_KEY}
      - CONTROLLER_PRIVATE_KEY=${TEST_CONTROLLER_PRIVATE_KEY}
      - JWT_SECRET=${TEST_JWT_SECRET}
      
      # Test API keys
      - TENDERLY_ACCESS_KEY=${TEST_TENDERLY_ACCESS_KEY}
      - AP_NOTIFY_BOT_TOKEN=${TEST_AP_NOTIFY_BOT_TOKEN}
      - SENDGRID_KEY=${TEST_SENDGRID_KEY}
      - THEGRAPH_API_KEY=${TEST_THEGRAPH_API_KEY}
      
      # Test smart wallet configuration
      - BUNDLER_URL=http://bundler:4437
      - MAX_WALLETS_PER_OWNER=${TEST_MAX_WALLETS_PER_OWNER:-5}
      
      # Test-specific settings
      - TENDERLY_ACCOUNT=${TEST_TENDERLY_ACCOUNT}
      - TENDERLY_PROJECT=${TEST_TENDERLY_PROJECT}
      - SERVER_NAME=aggregator-test
    volumes:
      - ./config:/app/config
      - test-db-data:/tmp/app-avs
    depends_on:
      - bundler
    healthcheck:
      test: curl --fail http://localhost:1323/up || exit 1
      interval: 3s
      retries: 10
      start_period: 5s
      timeout: 3s

  operator-test:
    image: avaprotocol/avs
    command: ["operator"]
    build:
      context: .
      dockerfile: dockerfiles/operator.Dockerfile
    networks:
      - bundler-unitest
    environment:
      # Test environment configuration (required)
      - ETH_RPC_URL=${BASE_SEPOLIA_RPC_URL}
      - ETH_WS_URL=${BASE_SEPOLIA_WS_URL}
      
      # Test operator private key
      - ECDSA_PRIVATE_KEY=${TEST_OPERATOR_PRIVATE_KEY}
      
      # Aggregator connection for tests
      - AGGREGATOR_ADDRESS=aggregator-test:2206
      
      # Test-specific settings
      - SERVER_NAME=operator-test
    volumes:
      - ./config:/app/config
    depends_on:
      aggregator-test:
        condition: service_healthy

volumes:
  test-db-data:

networks:
  # The presence of these objects is sufficient to define them
  bundler-unitest: {}
